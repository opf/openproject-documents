AllCops:
  TargetRubyVersion: 2.5
  Exclude:
    - db/schema.rb

AccessorMethodName:
  Enabled: false

ActionFilter:
  Enabled: false

Alias:
  Enabled: false

AndOr:
  Enabled: false

ArrayJoin:
  Enabled: false

AsciiComments:
  Enabled: false

AsciiIdentifiers:
  Enabled: false

Attr:
  Enabled: false

BlockLength:
  Enabled: false

BlockNesting:
  Enabled: false

CaseEquality:
  Enabled: false

CharacterLiteral:
  Enabled: false

ClassAndModuleChildren:
  Enabled: false

ClassLength:
  Enabled: false

ClassVars:
  Enabled: false

CollectionMethods:
  PreferredMethods:
    find: detect
    reduce: inject
    collect: map
    find_all: select

ColonMethodCall:
  Enabled: false

CommentAnnotation:
  Enabled: false

CyclomaticComplexity:
  Enabled: false

Delegate:
  Enabled: false

PreferredHashMethods:
  Enabled: false

Documentation:
  Enabled: false

DotPosition:
  EnforcedStyle: leading

DoubleNegation:
  Enabled: false

EachWithObject:
  Enabled: false

EmptyLiteral:
  Enabled: false

Encoding:
  Enabled: false

EvenOdd:
  Enabled: false

FileName:
  Enabled: false

FlipFlop:
  Enabled: false

FormatString:
  Enabled: false

GlobalVars:
  Enabled: false

GuardClause:
  Enabled: false

IfUnlessModifier:
  Enabled: false

IfWithSemicolon:
  Enabled: false

InlineComment:
  Enabled: false

Lambda:
  Enabled: false

LambdaCall:
  Enabled: false

LineEndConcatenation:
  Enabled: false

LineLength:
  Max: 130

MethodLength:
  Enabled: false

ModuleFunction:
  Enabled: false

NegatedIf:
  Enabled: false

NegatedWhile:
  Enabled: false

Next:
  Enabled: false

NilComparison:
  Enabled: false

Not:
  Enabled: false

NumericLiterals:
  Enabled: false

OneLineConditional:
  Enabled: false

BinaryOperatorParameterName:
  Enabled: false

ParameterLists:
  Enabled: false

PercentLiteralDelimiters:
  Enabled: false

PerlBackrefs:
  Enabled: false

PredicateName:
  NamePrefixBlacklist:
    - is_

Proc:
  Enabled: false

RaiseArgs:
  Enabled: false

RegexpLiteral:
  Enabled: false

SelfAssignment:
  Enabled: false

SingleLineBlockParams:
  Enabled: false

SingleLineMethods:
  Enabled: false

SignalException:
  Enabled: false

SpecialGlobalVars:
  Enabled: false

# Forcing single quotes doesn't give any reasonable advantages. To the contrary:
# it forces you to change the quotes every time you want to add interpolation,
# newlines or other escape sequences (\n), or quotes (') to a string. Rubbish.
# Don't even think about performance. That never was a valid argument to begin with.
#
#   For the record: using single quotes does NOT have any performance advantages.
#   Even if it did, this would be a silly argument.
#
# Ideally we would just use double quotes everywhere but since that would result
# in innumerable rubocop offenses we will just disable this. Quote away.
StringLiterals:
  Enabled: false

VariableInterpolation:
  Enabled: false

TrivialAccessors:
  Enabled: false

VariableInterpolation:
  Enabled: false

WhenThen:
  Enabled: false

WhileUntilModifier:
  Enabled: false

WordArray:
  Enabled: false

# Lint

AmbiguousOperator:
  Enabled: false

AmbiguousRegexpLiteral:
  Enabled: false

AssignmentInCondition:
  Enabled: false

ConditionPosition:
  Enabled: false

DeprecatedClassMethods:
  Enabled: false

ElseLayout:
  Enabled: false

HandleExceptions:
  Enabled: false

LiteralInCondition:
  Enabled: false

LiteralInInterpolation:
  Enabled: false

Loop:
  Enabled: false

ParenthesesAsGroupedExpression:
  Enabled: false

RequireParentheses:
  Enabled: false

UnderscorePrefixedVariableName:
  Enabled: false

Void:
  Enabled: false
